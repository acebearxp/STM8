# https://docs.microsoft.com/en-us/cpp/build/reference/nmake-reference

# compiler
cc = cxstm8
# linker
link = clnk
# formater
cvdwarf = cvdwarf
chex = chex

target = A1Hello

# includes
inc_cxstm8 = C:\DevTools\COSMIC\FSE_Compilers\CXSTM8\Hstm8
inc_stm8s_stdperiph_lib = ..\STM8S_StdPeriph_Driver\inc
# libs
lib_cxstm8 = C:\DevTools\COSMIC\FSE_Compilers\CXSTM8\Lib
# src
src_driver = ..\STM8S_StdPeriph_Driver\src

cflags = +mods0 -pxp -pp -l -dSTM8S105 -i$(inc_cxstm8) -i$(inc_stm8s_stdperiph_lib)
linkflags = -l$(lib_cxstm8)

# *.lkf file is the linker description file, generated by "ST Visual Developer" IDE
!IF $(DEBUG)==1
output_dir = Debug
cflags = $(cflags) +debug -no
lkf = $(target).debug.lkf
!ELSE
output_dir = Release
lkf = $(target).release.lkf
!ENDIF

cflags = $(cflags) -cl$(output_dir) -co$(output_dir)

# targets
target : $(output_dir)/$(target).s19 $(output_dir)/$(target).elf

$(output_dir)/$(target).s19 : $(output_dir)/$(target).sm8
	$(chex) -o $(output_dir)/$(target).s19 $(output_dir)/$(target).sm8

$(output_dir)/$(target).elf : $(output_dir)/$(target).sm8
	$(cvdwarf) $(output_dir)/$(target).sm8

$(output_dir)/$(target).sm8 : $(output_dir)/stm8_interrupt_vector.o $(output_dir)/stm8s_clk.o $(output_dir)/stm8s_gpio.o $(output_dir)/main.o
	$(link) $(linkflags) -m $(output_dir)/$(target).map -o $(output_dir)/$(target).sm8 $(lkf)

$(output_dir)/stm8_interrupt_vector.o : stm8_interrupt_vector.c
	$(cc) $(cflags) stm8_interrupt_vector.c

$(output_dir)/stm8s_clk.o : $(src_driver)/stm8s_clk.c
	$(cc) $(cflags) $(src_driver)/stm8s_clk.c

$(output_dir)/stm8s_gpio.o : $(src_driver)/stm8s_gpio.c
	$(cc) $(cflags) $(src_driver)/stm8s_gpio.c

$(output_dir)/main.o : main.c
	$(cc) $(cflags) main.c