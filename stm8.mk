# https://docs.microsoft.com/en-us/cpp/build/reference/nmake-reference

# compiler
cc = cxstm8
# linker
link = clnk
# formater
cvdwarf = cvdwarf
chex = chex

# includes
inc_cxstm8 = $(DEV_TOOLS_PATH)\COSMIC\FSE_Compilers\CXSTM8\Hstm8
inc_stm8s_stdperiph_lib = ..\STM8S_StdPeriph_Driver\inc
inc_ext = ..\STM8_Ext\inc
# libs
lib_cxstm8 = $(DEV_TOOLS_PATH)\COSMIC\FSE_Compilers\CXSTM8\Lib
# src
src_driver = ..\STM8S_StdPeriph_Driver\src
src_ext = ..\STM8_Ext\src

cflags = +mods0 -pxp -pp -l -dSTM8S105 -dHSE_Value -i$(inc_cxstm8) -i$(inc_stm8s_stdperiph_lib) -i$(inc_ext)
linkflags = -l$(lib_cxstm8)

!IFNDEF DEBUG
DEBUG = 1
!ENDIF

# *.lkf file is the linker description file, generated by "ST Visual Developer" IDE
!IF $(DEBUG)==1
output_dir = Debug
cflags = $(cflags) +debug -no
lkf = $(target).debug.lkf
!ELSE
output_dir = Release
lkf = $(target).release.lkf
!ENDIF

# src to full path objs
objs = $(subst .c,.o,$(src))
objs = $(patsubst %,$(output_dir)/%,$(objs))

cflags = $(cflags) -cl$(output_dir) -co$(output_dir)

# targets
target : $(output_dir) $(output_dir)/$(target).s19 $(output_dir)/$(target).elf

$(output_dir) : 
	mkdir $(output_dir) & @echo $(output_dir)

$(output_dir)/$(target).s19 : $(output_dir)/$(target).sm8
	$(chex) -o $(output_dir)/$(target).s19 $(output_dir)/$(target).sm8

$(output_dir)/$(target).elf : $(output_dir)/$(target).sm8
	$(cvdwarf) $(output_dir)/$(target).sm8

$(output_dir)/$(target).sm8 : $(objs)
    $(link) $(linkflags) -m $(output_dir)/$(target).map -o $(output_dir)/$(target).sm8 $(lkf)

{$(src_driver)}.c{$(output_dir)}.o :
	$(cc) $(cflags) $<

{$(src_ext)}.c{$(output_dir)}.o :
	$(cc) $(cflags) $<

.c{$(output_dir)}.o :
	$(cc) $(cflags) $<